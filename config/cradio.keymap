#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

&caps_word { continue-list = <UNDERSCORE MINUS BACKSPACE>; };

&sk {
    quick-release;
    release-after-ms = <2000>;
};

/ {
    behaviors {
        shft_cq: shift_caps_word {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            label = "SHFT_CW";
            bindings = <&kp LSHIFT>, <&caps_word>;

            tapping-term-ms = <200>;
        };

        am: alpha_modes {
            compatible = "zmk,behavior-hold-tap";
            label = "ALPHA_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <180>;
            quick-tap-ms = <240>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        NUM_COMBO {
            bindings = <&mo 4>;
            key-positions = <30 32>;
        };

        FUNCATION_COMBO {
            bindings = <&mo 5>;
            key-positions = <30 33>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        QWERTY {
            bindings = <
&kp Q  &kp W  &kp E  &kp R  &kp T       &kp Y      &kp U  &kp I  &kp O      &kp P
&kp A  &kp S  &kp D  &kp F  &kp G       &kp H      &kp J  &kp K  &kp L      &kp SEMICOLON
&mo 1  &kp Z  &kp X  &kp C  &kp V       &kp B      &kp N  &kp M  &kp COMMA  &kp DOT
                     &mo 3  &shft_cq    &kp SPACE  &mo 2
            >;
        };

        QWERTY-MOD {
            bindings = <
&kp Q   &kp W        &kp E        &kp R       &kp T       &kp Y      &kp U       &kp I        &kp O        &kp P
&kp A   &am LCTRL S  &am LMETA D  &am LALT F  &kp G       &kp H      &am LALT J  &am LMETA K  &am LCTRL L  &kp SEMI
&trans  &kp Z        &kp X        &kp C       &kp V       &kp B      &kp N       &kp M        &kp COMMA    &kp DOT
                                  &mo 3       &shft_cq    &kp SPACE  &mo 2
            >;
        };

        SYMBOLS {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN  &kp HASH   &kp DOLLAR  &kp PERCENT      &kp EQUAL     &kp GRAVE              &kp COLON        &kp SQT   &kp PLUS
&trans           &kp LCTRL    &kp LMETA  &kp LALT    &kp CARET        &kp ASTERISK  &kp LEFT_PARENTHESIS   &kp LEFT_BRACE   &kp LBKT  &kp MINUS
&trans           &trans       &kp BSLH   &kp PIPE    &kp AMPERSAND    &kp TILDE     &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp RBKT  &kp UNDERSCORE
                                         &trans      &kp LSHIFT       &trans        &trans
            >;
        };

        NAV {
            bindings = <
&kp ESC    &kp LG(N1)  &kp LG(N2)  &kp LG(N3)  &kp LG(N4)    &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &trans
&trans     &kp LCTRL   &kp LMETA   &kp LALT    &trans        &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &kp DEL
&kp LC(Z)  &kp LC(X)   &kp LC(C)   &kp LC(V)   &trans        &trans    &kp BSPC   &kp TAB    &trans     &trans
                                   &trans      &kp LSHIFT    &kp RET   &trans
            >;
        };

        NUM {
            bindings = <
&trans  &trans     &trans     &trans    &trans        &kp PLUS   &kp N7  &kp N8  &kp N9  &kp ASTERISK
&trans  &kp LCTRL  &kp LMETA  &kp LALT  &trans        &kp MINUS  &kp N4  &kp N5  &kp N6  &kp SLASH
&trans  &trans     &trans     &trans    &trans        &kp N0     &kp N1  &kp N2  &kp N3  &kp DOT
                              &trans    &kp LSHIFT    &trans     &trans
            >;
        };

        FUN {
            bindings = <
&trans  &trans     &trans     &trans    &trans        &kp F12  &kp F7  &kp F8  &kp F9  &trans
&trans  &kp LCTRL  &kp LMETA  &kp LALT  &trans        &kp F11  &kp F4  &kp F5  &kp F6  &trans
&trans  &trans     &trans     &trans    &trans        &kp F10  &kp F1  &kp F2  &kp F3  &trans
                              &trans    &kp LSHIFT    &trans   &trans
            >;
        };
    };
};

// vim:ft=c
