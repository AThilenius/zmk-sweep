#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define xxx &none
#define ___ &trans

// layer definitions
#define QWR 0
#define SYM 1
#define NAV 2
#define NUM 3
#define FUN 4

#define STICKY_KEY_TIMEOUT 60000

// custom keycodes
#define MEH        LS(LA(LCTRL))

&sk {
  release-after-ms = <STICKY_KEY_TIMEOUT>;
};

&caps_word {
  continue-list = <UNDERSCORE MINUS BACKSPACE>;
};

&kscan0 {
  debounce-period = <14>;
};

/ {
  combos { };

  behaviors {
		am: alpha_modes {
      compatible = "zmk,behavior-hold-tap";
      label = "ALPHA_MODS";
      #binding-cells = <2>;
      tapping-term-ms = <200>;
      quick-tap-ms = <200>;
			require-prior-idle-ms = <125>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&kp>;
    };
	};

keymap {
    compatible = "zmk,keymap";
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
//                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯

    qwerty_layer {
      label = "QWR";
      bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
    &kp Q         &kp W         &kp E         &kp R         &kp T             &kp Y         &kp U         &kp I         &kp O         &kp P
    &am LMETA A   &am LALT S    &am LCTRL D   &am LSHIFT F  &am MEH G         &am MEH H     &am LSHIFT J  &am LCTRL K   &am LALT L    &am LMETA SQT
    &kp Z         &kp X         &kp C         &kp V         &kp B             &kp N         &kp M        &kp COMMA      &kp DOT       &kp FSLH
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                              &lt NAV BSPC  &lt NUM TAB       &kp RET       &lt SYM SPACE
//                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
      >;
    };

    symbol_layer {
      label = "SYM";
      bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
    &kp EXCL      &kp AT        &kp HASH      &kp DLLR      &kp PRCNT         &kp CARET     &kp AMPS      &kp STAR      &kp UNDER     &kp SEMI
    &kp GRAVE     &kp TILDE     &kp LBRC      &kp LPAR      &kp LBKT          &kp MEH       &kp LSHIFT    &kp LCTRL     &kp LALT      &kp LMETA
    &kp LT        &kp GT        &kp RBRC      &kp RPAR      &kp RBKT          &kp PIPE      &kp MINUS     &kp EQUAL     &kp PLUS      &kp BSLH
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                              ___           ___               ___           ___
//                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
      >;
    };

    nav_layer {
      label = "NAV";
      bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
    xxx           xxx           xxx           xxx           xxx               &kp HOME      &kp PG_DN     &kp PG_UP     &kp END       xxx
    &kp LMETA     &kp LALT      &kp LCTRL     &kp LSHIFT    &kp MEH           &kp LEFT      &kp DOWN      &kp UP        &kp RIGHT     &kp BSPC
    &kp ESC       xxx           xxx           &kp TAB       xxx               xxx           &kp RET       xxx           xxx           &kp DEL
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                              ___           ___               ___           ___
//                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
      >;
    };

    num_layer {
      label = "NUM";
      bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
    xxx           xxx           xxx           xxx           xxx               &kp PLUS      &kp N7        &kp N8        &kp N9        xxx
    xxx           &kp C_PREV    &kp C_PP      &kp C_NEXT    xxx               &kp MINUS     &kp N4        &kp N5        &kp N6        &kp BSPC
    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  xxx           &bt BT_CLR        &kp N0        &kp N1        &kp N2        &kp N3        &kp DEL
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                              ___           ___               ___           ___
//                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
      >;
    };

    function_layer {
      label = "FUN";
      bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
    xxx           &kp C_VOL_DN  &kp C_MUTE    &kp C_VOL_UP  &kp C_BRI_UP      &kp F12       &kp F7        &kp F8        &kp F9        xxx
    xxx           &kp C_PREV    &kp C_PP      &kp C_NEXT    &kp C_BRI_DN      &kp F11       &kp F4        &kp F5        &kp F6        xxx
    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &out OUT_TOG  &bt BT_CLR        &kp F10       &kp F1        &kp F2        &kp F3        xxx
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                              ___           ___               ___           ___
//                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
      >;
    };

  };
};

// vim:ft=c
